name: 'Release'

on:
  push:
    branches:
      - release
      - ci
  pull_request:

jobs:
  create-release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 'lts/*'
      - name: Install dependencies
        run: npm ci
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release

  build-tauri:
    needs: create-release
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-20.04, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
    - uses: actions/checkout@v2
    - name: setup node
      uses: actions/setup-node@v1
      with:
        node-version: 16
    - name: install Rust stable
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - name: install dependencies (ubuntu only)
      if: matrix.platform == 'ubuntu-20.04'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf
    - name: install app dependencies
      run: npm ci
    - name: build ðŸš€
      run: npm run tauri build
    - name: upload MacOS assets
      if: matrix.platform == 'macos-latest'
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: src-tauri/target/release/bundle/dmg/libre-learn*.dmg
        asset_name: MacOS
        tag: ${{ github.ref }}
        overwrite: true
        body: "This is my release text"
      
#    - uses: tauri-apps/tauri-action@v0
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        releaseId: ${{ needs.create-release.outputs.release_id }}
#
#  publish-release:
#    runs-on: ubuntu-20.04
#    needs: [ create-release, build-tauri ]
#    if: github.event_name == "push" && (github.ref == 'refs/heads/release' || github.ref == 'refs/heads/ci')
#    
#    steps:
#      - name: publish release
#        id: publish-release
#        uses: actions/github-script@v6
#        env:
#          release_id: ${{ needs.create-release.outputs.release_id }}
#        with:
#          script: |
#            github.rest.repos.updateRelease({
#              owner: context.repo.owner,
#              repo: context.repo.repo,
#              release_id: process.env.release_id,
#              draft: false,
#              prerelease: false
#            })